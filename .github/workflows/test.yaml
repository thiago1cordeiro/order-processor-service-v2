name: Build Project

on:
  push:

env:
  SONAR_TOKEN: squ_7ade39635d0dfa6c12632c925eb3abf7da11d187
  SONAR_HOST_URL: http://ec2-3-16-67-144.us-east-2.compute.amazonaws.com:9000/

jobs:
  test:
    name: TEST APP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Run Tests
        run: |
          chmod +x ./gradlew
          ./gradlew clean build jacocoTestReport

      - name: Analisar com SonarQube
        env:
          SONAR_TOKEN: squ_7ade39635d0dfa6c12632c925eb3abf7da11d187
          SONAR_HOST_URL: http://ec2-3-16-67-144.us-east-2.compute.amazonaws.com:9000/
        run: ./gradlew sonar

      - name: Verificar Cobertura de Código
        run: |
          COVERAGE=$(grep -oP '(?<=<counter type="LINE" missed=")\d+' build/reports/jacoco/test/jacocoTestReport.xml | awk '{sum+=$1} END {print sum}')
          if [ "$COVERAGE" -eq 0 ]; then
            echo "Cobertura de código insuficiente nos novos testes!"
            exit 1
          fi        

  build:
    name: BUILD APP
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test